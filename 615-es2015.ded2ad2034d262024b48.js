"use strict";(self.webpackChunkmyHosy=self.webpackChunkmyHosy||[]).push([[615],{79615:function(e,t,n){n.r(t),n.d(t,{AppointmentModule:function(){return ve}});var i=n(38583),s=n(95987),o=n(55477),r=n(37716);let a=(()=>{class e{constructor(){}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r.\u0275\u0275defineComponent({type:e,selectors:[["ngx-appointment-calender"]],decls:2,vars:0,template:function(e,t){1&e&&(r.\u0275\u0275elementStart(0,"p"),r.\u0275\u0275text(1,"appointment-calender works!"),r.\u0275\u0275elementEnd())},styles:[""]}),e})();var p=n(23065),l=n(80273),m=(()=>{return(e=m||(m={})).AppointmentRequested="[View Appointment Page] Appointment Requested",e.AppointmentLoaded="[Appointments API] Appointment Loaded",e.AllAppointmentsRequested="[Appointments Home Page] All Appointments Requested",e.AllAppointmentsLoaded="[Appointments API] All Appointments Loaded",e.AppointmentSaved="[Edit Appointment Dialog] Appointment Saved",m;var e})();class d{constructor(e){this.payload=e,this.type=m.AppointmentRequested}}class c{constructor(e){this.payload=e,this.type=m.AppointmentLoaded}}class u{constructor(){this.type=m.AllAppointmentsRequested}}class h{constructor(e){this.payload=e,this.type=m.AllAppointmentsLoaded}}const f=(0,l.H)(),g=f.getInitialState({allAppointmentsLoaded:!1});function b(e=g,t){switch(t.type){case m.AppointmentLoaded:return f.addOne(t.payload.appointment,e);case m.AllAppointmentsLoaded:return f.setAll(t.payload.appointments,Object.assign(Object.assign({},e),{allAppointmentsLoaded:!0}));case m.AppointmentSaved:return f.updateOne(t.payload.appointment,e);default:return e}}const{selectAll:v}=f.getSelectors(),y=(0,p.ZF)("appointments"),A=(0,p.P1)(y,v),_=(0,p.P1)(A,e=>e.filter(e=>"Treated"===e.appointment_status)),S=(0,p.P1)(A,e=>e.filter(e=>"Confirmed"===e.appointment_status)),I=(0,p.P1)(A,e=>e.filter(e=>"Requested"===e.appointment_status)),w=(0,p.P1)(A,e=>e.filter(e=>"Cancelled"===e.appointment_status)),k=(0,p.P1)(A,e=>e.filter(e=>"Pending Confirmation"===e.appointment_status)),E=(0,p.P1)(y,e=>e.allAppointmentsLoaded);var C=n(68307),D=n(3679),N=n(54550),j=n(16738),P=n(18541),$=n(4242),x=n(65890),R=n(486),T=n(61758);function O(e,t){if(1&e&&(r.\u0275\u0275elementStart(0,"nb-option",21),r.\u0275\u0275text(1),r.\u0275\u0275elementEnd()),2&e){const e=t.$implicit;r.\u0275\u0275property("value",e.id),r.\u0275\u0275advance(1),r.\u0275\u0275textInterpolate(e.name)}}function q(e,t){if(1&e&&(r.\u0275\u0275elementStart(0,"nb-option",21),r.\u0275\u0275text(1),r.\u0275\u0275elementEnd()),2&e){const e=t.$implicit;r.\u0275\u0275property("value",e.index),r.\u0275\u0275advance(1),r.\u0275\u0275textInterpolate(e.range)}}function F(e,t){if(1&e&&(r.\u0275\u0275elementStart(0,"nb-option",21),r.\u0275\u0275text(1),r.\u0275\u0275elementEnd()),2&e){const e=t.$implicit;r.\u0275\u0275property("value",e.id),r.\u0275\u0275advance(1),r.\u0275\u0275textInterpolate(e.name)}}const B=function(){return{extraPlugins:"divarea",height:"120"}};let M=(()=>{class e{constructor(e,t,n,i,s){this.jarwis=e,this.store=t,this.formBuilder=n,this.toastrService=i,this.dateService=s,this.makeAppointmentForm=new D.cw({dateTime:new D.NI("",D.kI.required),timeSlots:new D.NI("",D.kI.required),patientID:new D.NI("",D.kI.required),doctorID:new D.NI("",D.kI.required),appointmentRemark:new D.NI("",D.kI.required)}),this.tt=0,this.b_times=[],this.s_times=[],this.schedule=[],this.appointments=[],this.date=new Date,this.step=40,this.newItemEvent=new r.EventEmitter,this.appointments_start_times=[],this.allDoctors$=this.store.pipe((0,p.Ys)(P.Bv)),this.allPatients$=this.store.pipe((0,p.Ys)($.QD)),this.allSchedules$=this.store.pipe((0,p.Ys)(x.mg)),this.allAppointments$=this.store.pipe((0,p.Ys)(A)),this.min=this.dateService.today(),this.max=this.dateService.addMonth(this.dateService.today(),1),this.dateTime=new D.NI("",[D.kI.required]),this.timeSlots=new D.NI("",[D.kI.required]),this.patientID=new D.NI("",[D.kI.required]),this.doctorID=new D.NI("",[D.kI.required]),this.appointmentRemark=new D.NI("",[D.kI.required]),this.makeAppointmentForm=n.group({DateTime:this.dateTime,TimeSlots:this.timeSlots,patientId:this.patientID,doctorId:this.doctorID,AppointmentRemark:this.appointmentRemark})}ngOnInit(){}onDoctorChoice(e){let t;console.log(e),this.employee_id=e,this.store.pipe((0,p.Ys)((0,x.AK)(e))).subscribe(e=>{t=e}),console.log(t),this.store.pipe((0,p.Ys)((0,x.sG)(e))).subscribe(e=>{e=e,console.log(e),e.meals.forEach(e=>{const t=[];t.push(e),t.map(e=>Object.assign({},e,{status:""}))[0].status=e.state})}),console.log(t)}onDateChange(e){let t;console.log(e),this.booking_date=j(new Date(e)).format("y-MM-DD"),this.dateQuery=this.formBuilder.group({date:this.booking_date}),this.jarwis.postURI("appointments/8",this.dateQuery.value).subscribe(e=>{console.log(e.data),t=e.data,""!==t.schedule&&(this.schedule=t.schedule,""!==t.appointments&&(this.appointments=t.appointments,console.log(this.appointments)),this.dis_times(this.booking_date,this.schedule,this.appointments))},e=>{console.log(e),e.error instanceof Error?console.log("Client-side error occured."):console.log("Server-side error occured.")})}dis_times(e=null,t,n){var i=JSON.parse('{"interval":[]}'),s=t.duration,o=t.end_time,r=t.start_time.split(":"),a=o.split(":"),p=60*+r[0]+ +r[1],l=60*+a[0]+ +a[1];this.tt=p,console.log(p),console.log(l);var m=["AM","PM"];console.log(JSON.stringify(n).length),Object.keys(i),this.appointments_start_times=[];for(let f=0;f<Object.keys(n).length;f++)this.appointments_start_times.push(n[f].s_time);console.log(this.appointments_start_times);for(var d=0;Number(this.tt)<Number(l);d++){var c=Math.floor(this.tt/60),u=this.tt%60;if(this.s_times[d]=("0"+c%12).slice(-2)+":"+("0"+u).slice(-2)+" "+m[Math.floor(c/12)],d>0){var h=!0;this.appointments_start_times.forEach(e=>{if(h=!0,Number(this.tt)<Number(n)&&Number(this.tt)+s<Number(n)||Number(this.tt)>Number(n)&&Number(this.tt)+s<Number(n))h=!0;else{var t=e.split(":"),n=60*+t[0]+ +t[1];console.log(n),Number(this.tt)>=Number(n)&&Number(n)+Number(s)<=Number(this.tt)+Number(s)?(console.log("Booked"),h=!1):h=!0}}),this.available_time_slots=this.s_times[d-1]+" - "+this.s_times[d],console.log(h),i.interval.push({range:this.available_time_slots}),console.log("new",i.interval),this.available_time_slots_array=i.interval}this.tt=Number(this.tt)+Number(s)}console.log(this.available_time_slots_array)}addAppointment(){this.makeAppointmentForm=this.formBuilder.group({start_time:this.booking_date,end_time:this.booking_date,date:this.booking_date}),this.jarwis.postURI("appointments",this.makeAppointmentForm.value).subscribe(e=>{console.log(e),void 0!==e.data.id?e.data.id&&(this.toastrService.show(e.data.first_name+" "+e.data.first_name,"User Found",{status:"success",destroyByClick:!0,duration:2e3,hasIcon:!0,position:N.fe3.TOP_RIGHT,preventDuplicates:!1}),this.newItemEvent.emit({id:e.data})):(this.toastrService.show(e.data.message,"Kindly register a new user",{status:"danger",destroyByClick:!0,duration:2e3,hasIcon:!0,position:N.fe3.TOP_RIGHT,preventDuplicates:!1}),this.newItemEvent.emit({id:null}))})}}return e.\u0275fac=function(t){return new(t||e)(r.\u0275\u0275directiveInject(R.R),r.\u0275\u0275directiveInject(p.yh),r.\u0275\u0275directiveInject(D.qu),r.\u0275\u0275directiveInject(N.quB),r.\u0275\u0275directiveInject(N.uui))},e.\u0275cmp=r.\u0275\u0275defineComponent({type:e,selectors:[["ngx-make-appointment-form"]],outputs:{newItemEvent:"newItemEvent"},decls:43,vars:15,consts:[[1,"scrollable-container"],[1,"col-12"],[1,"row",3,"formGroup"],[1,"col-6","form-group"],["for","InputRefdByDoctor",1,"label"],["formControlName","doctorId","fullWidth","",3,"selected","selectedChange"],[3,"value",4,"ngFor","ngForOf"],["for","InputEmail1",1,"label"],["nbInput","","fullWidth","","placeholder","Pick Date","formControlName","DateTime",3,"nbDatepicker","ngModelChange"],[3,"min","max"],["appointmentDatePicker",""],["for","InputTemplate",1,"label"],["formControlName","TimeSlots","fullWidth",""],["selected",""],["for","InputPatient",1,"label"],["formControlName","patientId","fullWidth","",3,"selected","selectedChange"],[1,"col-12","form-group"],["for","InputAppointmentRemark",1,"label"],["formControlName","AppointmentRemark",3,"config"],[1,"col-4","form-group"],["type","submit","nbButton","","status","info",3,"click"],[3,"value"]],template:function(e,t){if(1&e&&(r.\u0275\u0275elementStart(0,"span",0),r.\u0275\u0275elementStart(1,"nb-card"),r.\u0275\u0275elementStart(2,"nb-card-header"),r.\u0275\u0275text(3," Add Appointment Form"),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementStart(4,"nb-card-body",1),r.\u0275\u0275elementStart(5,"div",2),r.\u0275\u0275elementStart(6,"div",3),r.\u0275\u0275elementStart(7,"label",4),r.\u0275\u0275text(8,"Doctor"),r.\u0275\u0275elementEnd(),r.\u0275\u0275element(9,"br"),r.\u0275\u0275elementStart(10,"nb-select",5),r.\u0275\u0275listener("selectedChange",function(e){return t.selectedDoctor=e})("selectedChange",function(e){return t.onDoctorChoice(e)}),r.\u0275\u0275template(11,O,2,2,"nb-option",6),r.\u0275\u0275pipe(12,"async"),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementStart(13,"div",3),r.\u0275\u0275elementStart(14,"label",7),r.\u0275\u0275text(15,"Date & Time"),r.\u0275\u0275elementEnd(),r.\u0275\u0275element(16,"br"),r.\u0275\u0275elementStart(17,"input",8),r.\u0275\u0275listener("ngModelChange",function(e){return t.onDateChange(e)}),r.\u0275\u0275elementEnd(),r.\u0275\u0275element(18,"nb-datepicker",9,10),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementStart(20,"div",3),r.\u0275\u0275elementStart(21,"label",11),r.\u0275\u0275text(22,"Time Slots"),r.\u0275\u0275elementEnd(),r.\u0275\u0275element(23,"br"),r.\u0275\u0275elementStart(24,"nb-select",12),r.\u0275\u0275elementStart(25,"nb-option",13),r.\u0275\u0275text(26,"Time Slot"),r.\u0275\u0275elementEnd(),r.\u0275\u0275template(27,q,2,2,"nb-option",6),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementStart(28,"div",3),r.\u0275\u0275elementStart(29,"label",14),r.\u0275\u0275text(30,"Patient"),r.\u0275\u0275elementEnd(),r.\u0275\u0275element(31,"br"),r.\u0275\u0275elementStart(32,"nb-select",15),r.\u0275\u0275listener("selectedChange",function(e){return t.selectedPatient=e}),r.\u0275\u0275template(33,F,2,2,"nb-option",6),r.\u0275\u0275pipe(34,"async"),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementStart(35,"div",16),r.\u0275\u0275elementStart(36,"label",17),r.\u0275\u0275text(37,"Appointment Remark"),r.\u0275\u0275elementEnd(),r.\u0275\u0275element(38,"br"),r.\u0275\u0275element(39,"ckeditor",18),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementStart(40,"div",19),r.\u0275\u0275elementStart(41,"button",20),r.\u0275\u0275listener("click",function(){return t.addAppointment()}),r.\u0275\u0275text(42," Submit "),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd()),2&e){const e=r.\u0275\u0275reference(19);r.\u0275\u0275advance(5),r.\u0275\u0275property("formGroup",t.makeAppointmentForm),r.\u0275\u0275advance(5),r.\u0275\u0275property("selected",t.selectedDoctor),r.\u0275\u0275advance(1),r.\u0275\u0275property("ngForOf",r.\u0275\u0275pipeBind1(12,10,t.allDoctors$)),r.\u0275\u0275advance(6),r.\u0275\u0275property("nbDatepicker",e),r.\u0275\u0275advance(1),r.\u0275\u0275property("min",t.min)("max",t.max),r.\u0275\u0275advance(9),r.\u0275\u0275property("ngForOf",t.available_time_slots_array),r.\u0275\u0275advance(5),r.\u0275\u0275property("selected",t.selectedPatient),r.\u0275\u0275advance(1),r.\u0275\u0275property("ngForOf",r.\u0275\u0275pipeBind1(34,12,t.allPatients$)),r.\u0275\u0275advance(6),r.\u0275\u0275property("config",r.\u0275\u0275pureFunction0(14,B))}},directives:[N.Asz,N.ndF,N.yKW,D.JL,D.sg,N.rs,D.JJ,D.u,i.sg,N.h8i,D.Fj,N.$kf,N.B4C,N.q51,T.ue,N.DPz],pipes:[i.Ov],styles:[""]}),e})();var Y=n(76185);let L=(()=>{class e{constructor(e,t,n){this.windowService=e,this.store=t,this.dialogService=n,this.for_all_settings={actions:!1,columns:{id:{title:"#",type:"number"},patient_name:{title:"Patient",type:"string"},doctor_name:{title:"Doctor",type:"string"},date:{title:"Date-Time",type:"string"},remarks:{title:"Remarks",type:"string"},appointment_status:{title:"Status",type:"string"}}},this.settings={actions:!1,columns:{id:{title:"#",type:"number"},patient_name:{title:"Patient",type:"string"},doctor_name:{title:"Doctor",type:"string"},date:{title:"Date-Time",type:"string"},remarks:{title:"Remarks",type:"string"}}},this.store.pipe((0,p.Ys)(E),(0,C.b)(e=>{e||this.store.dispatch(new u)})).subscribe(),this.allAppointments$=this.store.pipe((0,p.Ys)(A)),this.pendingAppointments$=this.store.pipe((0,p.Ys)(k)),this.confirmedAppointments$=this.store.pipe((0,p.Ys)(S)),this.treatedAppointments$=this.store.pipe((0,p.Ys)(_)),this.cancelledAppointments$=this.store.pipe((0,p.Ys)(w)),this.requestedAppointments$=this.store.pipe((0,p.Ys)(I))}onDeleteConfirm(e){window.confirm("Are you sure you want to delete?")?e.confirm.resolve():e.confirm.reject()}ngOnInit(){}openAddReport(e,t){this.openWindow(M,e.data,t)}openWindow(e,t,n){this.windowService.open(e,{context:{text:"some text to pass into template",data:t,type:n}})}open(){this.dialogService.open(M,{})}}return e.\u0275fac=function(t){return new(t||e)(r.\u0275\u0275directiveInject(N.eJ1),r.\u0275\u0275directiveInject(p.yh),r.\u0275\u0275directiveInject(N.Gln))},e.\u0275cmp=r.\u0275\u0275defineComponent({type:e,selectors:[["ngx-appointment-list"]],decls:27,vars:24,consts:[[1,"row"],[1,"col-12"],["size","small"],["type","submit","nbButton","","status","danger",3,"click"],["fullWidth",""],["tabTitle","All"],[3,"settings","source","deleteConfirm"],["tabTitle","Pending Confimation"],["tabTitle","Confirmed"],["tabTitle","Treated"],["tabTitle","Cancelled"],["tabTitle","Requested"]],template:function(e,t){1&e&&(r.\u0275\u0275elementStart(0,"div",0),r.\u0275\u0275elementStart(1,"div",1),r.\u0275\u0275elementStart(2,"nb-card",2),r.\u0275\u0275elementStart(3,"nb-card-header"),r.\u0275\u0275text(4," Appointment's Table "),r.\u0275\u0275elementStart(5,"button",3),r.\u0275\u0275listener("click",function(e){return t.openAddReport(e,"add")}),r.\u0275\u0275text(6,"Add Appointment"),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementStart(7,"nb-card-body"),r.\u0275\u0275elementStart(8,"nb-tabset",4),r.\u0275\u0275elementStart(9,"nb-tab",5),r.\u0275\u0275elementStart(10,"ng2-smart-table",6),r.\u0275\u0275listener("deleteConfirm",function(e){return t.onDeleteConfirm(e)}),r.\u0275\u0275pipe(11,"async"),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementStart(12,"nb-tab",7),r.\u0275\u0275elementStart(13,"ng2-smart-table",6),r.\u0275\u0275listener("deleteConfirm",function(e){return t.onDeleteConfirm(e)}),r.\u0275\u0275pipe(14,"async"),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementStart(15,"nb-tab",8),r.\u0275\u0275elementStart(16,"ng2-smart-table",6),r.\u0275\u0275listener("deleteConfirm",function(e){return t.onDeleteConfirm(e)}),r.\u0275\u0275pipe(17,"async"),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementStart(18,"nb-tab",9),r.\u0275\u0275elementStart(19,"ng2-smart-table",6),r.\u0275\u0275listener("deleteConfirm",function(e){return t.onDeleteConfirm(e)}),r.\u0275\u0275pipe(20,"async"),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementStart(21,"nb-tab",10),r.\u0275\u0275elementStart(22,"ng2-smart-table",6),r.\u0275\u0275listener("deleteConfirm",function(e){return t.onDeleteConfirm(e)}),r.\u0275\u0275pipe(23,"async"),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementStart(24,"nb-tab",11),r.\u0275\u0275elementStart(25,"ng2-smart-table",6),r.\u0275\u0275listener("deleteConfirm",function(e){return t.onDeleteConfirm(e)}),r.\u0275\u0275pipe(26,"async"),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd(),r.\u0275\u0275elementEnd()),2&e&&(r.\u0275\u0275advance(10),r.\u0275\u0275property("settings",t.for_all_settings)("source",r.\u0275\u0275pipeBind1(11,12,t.allAppointments$)),r.\u0275\u0275advance(3),r.\u0275\u0275property("settings",t.settings)("source",r.\u0275\u0275pipeBind1(14,14,t.pendingAppointments$)),r.\u0275\u0275advance(3),r.\u0275\u0275property("settings",t.settings)("source",r.\u0275\u0275pipeBind1(17,16,t.confirmedAppointments$)),r.\u0275\u0275advance(3),r.\u0275\u0275property("settings",t.settings)("source",r.\u0275\u0275pipeBind1(20,18,t.treatedAppointments$)),r.\u0275\u0275advance(3),r.\u0275\u0275property("settings",t.settings)("source",r.\u0275\u0275pipeBind1(23,20,t.cancelledAppointments$)),r.\u0275\u0275advance(3),r.\u0275\u0275property("settings",t.settings)("source",r.\u0275\u0275pipeBind1(26,22,t.requestedAppointments$)))},directives:[N.Asz,N.ndF,N.DPz,N.yKW,N.kyn,N.TR4,Y.T5],pipes:[i.Ov],styles:[".nb-theme-default   [_nghost-%COMP%]   nb-card[_ngcontent-%COMP%]{transform:translate(0);height:100%}.nb-theme-dark   [_nghost-%COMP%]   nb-card[_ngcontent-%COMP%]{transform:translate(0);height:100%}.nb-theme-cosmic   [_nghost-%COMP%]   nb-card[_ngcontent-%COMP%]{transform:translate(0);height:100%}.nb-theme-corporate   [_nghost-%COMP%]   nb-card[_ngcontent-%COMP%]{transform:translate(0);height:100%}"]}),e})();const z=[{path:"",component:L,children:[{path:"",redirectTo:"all",pathMatch:"full"},{path:"add",component:M},{path:"all",component:L},{path:"upcoming",component:(()=>{class e{constructor(){}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r.\u0275\u0275defineComponent({type:e,selectors:[["ngx-appointment-upcoming"]],decls:2,vars:0,template:function(e,t){1&e&&(r.\u0275\u0275elementStart(0,"p"),r.\u0275\u0275text(1,"appointment-upcoming works!"),r.\u0275\u0275elementEnd())},styles:[""]}),e})()},{path:"calender",component:a},{path:"**",component:o.w}]}];let W=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=r.\u0275\u0275defineNgModule({type:e}),e.\u0275inj=r.\u0275\u0275defineInjector({imports:[[s.Bz.forChild(z)],s.Bz]}),e})();var Q=n(73749),U=n(55171),G=n(64762),H=n(45887),J=n(19773),K=n(88002),X=n(57057),V=n(45435),Z=n(91841);class ee{constructor(e,t,n,i,s,o,r,a){this.id=e,this.doctor_id=t,this.patient_id=n,this.doctor_name=i,this.patient_name=s,this.remarks=o,this.date=r,this.appointment_status=a}}let te=(()=>{class e{adapt(e){return new ee(e.id,e.employee_id,e.patient_id,`Dr. ${e.employee.user.first_name} ${e.employee.user.other_name}`,e.patient.user.first_name+" "+e.patient.user.other_name,e.remarks,e.date,e.appointment_status)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=r.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac,providedIn:"root"}),e})(),ne=(()=>{class e{constructor(e,t,n){this.http=e,this.adapter=t,this.jarwis=n}findAppointmentById(e){return this.http.get(this.jarwis.apiUrl+`/appointments/${e}`)}findAllAppointments(){return this.jarwis.getURI("appointments").pipe((0,K.U)(e=>e.data.map(e=>this.adapter.adapt(e))))}saveAppointment(e,t){return this.http.put("/api/appointments/"+e,t)}}return e.\u0275fac=function(t){return new(t||e)(r.\u0275\u0275inject(Z.eN),r.\u0275\u0275inject(te),r.\u0275\u0275inject(R.R))},e.\u0275prov=r.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})();class ie{constructor(e,t,n){this.actions$=e,this.appointmentsService=t,this.store=n,this.loadAppointment$=this.actions$.pipe((0,H.l4)(m.AppointmentRequested),(0,J.zg)(e=>this.appointmentsService.findAppointmentById(e.payload.appointmentId)),(0,K.U)(e=>new c({appointment:e}))),this.loadAllAppointments$=this.actions$.pipe((0,H.l4)(m.AllAppointmentsRequested),(0,X.M)(this.store.pipe((0,p.Ys)(E))),(0,V.h)(([,e])=>!e),(0,J.zg)(()=>this.appointmentsService.findAllAppointments()),(0,K.U)(e=>new h({appointments:e})))}}ie.\u0275fac=function(e){return new(e||ie)(r.\u0275\u0275inject(H.eX),r.\u0275\u0275inject(ne),r.\u0275\u0275inject(p.yh))},ie.\u0275prov=r.\u0275\u0275defineInjectable({token:ie,factory:ie.\u0275fac}),(0,G.gn)([(0,H.Qm)()],ie.prototype,"loadAppointment$",void 0),(0,G.gn)([(0,H.Qm)()],ie.prototype,"loadAllAppointments$",void 0);var se=n(28049);let oe=(()=>{class e{constructor(e,t){this.appointmentsService=e,this.store=t}resolve(e,t){const n=e.params.id;return this.store.pipe((0,p.Ys)((e=>(0,p.P1)(y,t=>t.entities[e]))(n)),(0,C.b)(e=>{e||this.store.dispatch(new d({appointmentId:n}))}),(0,V.h)(e=>!!e),(0,se.P)())}}return e.\u0275fac=function(t){return new(t||e)(r.\u0275\u0275inject(ne),r.\u0275\u0275inject(p.yh))},e.\u0275prov=r.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})();var re=n(40810),ae=n(5559),pe=n(80541),le=n(65476),me=n(2678),de=n(10758),ce=n(1398),ue=n(62827),he=n(10709),fe=n(2001),ge=n(1947),be=n(4222);let ve=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=r.\u0275\u0275defineNgModule({type:e}),e.\u0275inj=r.\u0275\u0275defineInjector({providers:[ne,oe,ce.e,me.C,ue.$,de.N,be.u,ge.h,D.qu],imports:[[i.ez,W,T.dF,N.EoG,D.u5,N.nKr,N.T2N,N.zyh,N.MfT,N.OA,Q.$,N._WB,N.IIj,N.kmq,N.j7H.forChild(),N.wXm.forChild(),Y.ne,U.R,p.Aw.forFeature("doctors",pe.qf),H.sQ.forFeature([re.e]),p.Aw.forFeature("patients",le.Sx),H.sQ.forFeature([ae.a]),p.Aw.forFeature("appointments",b),H.sQ.forFeature([ie]),p.Aw.forFeature("schedules",fe.V8),H.sQ.forFeature([he.R]),D.UX]]}),e})()}}]);